
import com.fazecast.jSerialComm.SerialPort;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.json.*;






/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author miguel
 */




public class aq_dados_gui extends javax.swing.JFrame{
    
    static SerialPort port;
    
    static XYSeries series15 = new XYSeries("Sensor 15cm");
    static XYSeries series25 = new XYSeries("Sensor 25cm");
    static XYSeries series35 = new XYSeries("Sensor 35cm");
    static XYSeriesCollection dataset = new XYSeriesCollection();
    
        
    
    static int x = 0;
    
    int number=0;

    /**
     * Creates new form aq
     */
    public aq_dados_gui() {
        initComponents();
        dataset.addSeries(series15);
        dataset.addSeries(series25);
        dataset.addSeries(series35);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbbox_ports = new javax.swing.JComboBox<>();
        btn_conectar = new javax.swing.JButton();
        cmbbox_baudrate = new javax.swing.JComboBox<>();
        jPanel_chart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bancada para Controle de Fluxo de Calor");

        cmbbox_ports.setModel(new javax.swing.DefaultComboBoxModel<>());
        cmbbox_ports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbox_portsActionPerformed(evt);
            }
        });

        btn_conectar.setText("Conectar");
        btn_conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_conectarActionPerformed(evt);
            }
        });

        cmbbox_baudrate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9600", "14400", "19200", "28800", "38400", "57600", "115200" }));

        jPanel_chart.setBackground(new java.awt.Color(254, 254, 254));
        jPanel_chart.setLayout(new javax.swing.BoxLayout(jPanel_chart, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_conectar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbox_baudrate, 0, 181, Short.MAX_VALUE)
                    .addComponent(cmbbox_ports, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73)
                .addComponent(jPanel_chart, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_conectar, cmbbox_baudrate, cmbbox_ports});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_chart, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbbox_ports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(cmbbox_baudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_conectar)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbbox_portsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbox_portsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbbox_portsActionPerformed

    private void btn_conectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_conectarActionPerformed
        // TODO add your handling code here:
        
        if(btn_conectar.getText().equals("Conectar")){
            //DEBUG
            System.out.println("Bot√£o Ok");
            //DEBUG
            port = SerialPort.getCommPort(cmbbox_ports.getSelectedItem().toString());
            port.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
            port.setBaudRate(Integer.parseInt(cmbbox_baudrate.getSelectedItem().toString()));
            
            if(port.openPort()){
                
                btn_conectar.setText("Desconectar");
                cmbbox_ports.setEnabled(false);
                cmbbox_baudrate.setEnabled(false);
            
            }
            try {
                TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException ex) {
                Logger.getLogger(aq_dados_gui.class.getName()).log(Level.SEVERE, null, ex);
            }
            Thread thread =new Thread(){
            @Override
            
            public void run(){
                
                Scanner scanner = new Scanner(port.getInputStream());
				while(scanner.hasNext()) {
					try {
						String line = scanner.nextLine();
						
                                                //int number = Integer.parseInt(line);
						//series.add(x++,number);
                                                //System.out.println(number);
                                                
                                                try{
                                                    JSONArray jsonArray = new JSONArray(line);
                                                    JSONObject jsonSensor15 = jsonArray.getJSONObject(0);
                                                    JSONObject jsonSensor25 = jsonArray.getJSONObject(1);
                                                    JSONObject jsonSensor35 = jsonArray.getJSONObject(2);
                                                    /*
                                                    series15.add(jsonSensor15.getBigInteger("time"), jsonSensor15.getInt("value"));
                                                    series25.add(jsonSensor25.getBigInteger("time"), jsonSensor25.getInt("value"));
                                                    series35.add(jsonSensor35.getBigInteger("time"), jsonSensor35.getInt("value"));
                                                    */
                                                    
                                                    series15.add(x++, jsonSensor15.getInt("value"));
                                                    series25.add(x, jsonSensor25.getInt("value"));
                                                    series35.add(x, jsonSensor35.getInt("value"));
                                                    
                                                }catch(JSONException e){
                                                    e.printStackTrace();                                                
                                                }
                                                
                                                
                                                
                                                //JSONObject obj = new JSONObject(line);
                                                
                                                //System.out.println(""+obj.getString("sensor"));
                                                
						
						} catch(Exception e) {}
								}
                                scanner.close();
                                
                        }
       
                   
            };
            thread.start();
        }else{
            port.closePort();
            cmbbox_ports.setEnabled(true);
            cmbbox_baudrate.setEnabled(true);
            btn_conectar.setText("Conectar");
            x=0;
            
        
        }
        
    }//GEN-LAST:event_btn_conectarActionPerformed
   
    /**
     * @param args the command line arguments
     */
            
    public static void main(String args[]) {
                
                new aq_dados_gui().setVisible(true);
                
                Lista_Serial lista_serial=new Lista_Serial();
                SerialPort[] ports_names=lista_serial.lista_serial();
                int ports_num=lista_serial.lista_serial().length;
                
                for(int i=0; i<ports_num;i++){
                    
                cmbbox_ports.addItem(ports_names[i].getSystemPortName());
                
                }
                
                Gerar_Grafico grafico = new Gerar_Grafico();
                
                grafico.grafico(jPanel_chart);
                
                if(btn_conectar.getText().equals("Conectar")){
                
                }
                
                
                
                
                
                
                
                
        
                
        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btn_conectar;
    private javax.swing.JComboBox<String> cmbbox_baudrate;
    private static javax.swing.JComboBox<String> cmbbox_ports;
    private static javax.swing.JPanel jPanel_chart;
    // End of variables declaration//GEN-END:variables
}
